// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../aws-sdk/clients/sqs

import * as SQS from 'aws-sdk/clients/sqs';

export type SqsWorkerSuccessfulTaskCallback = (task: Task, result: ISqsWorkerTaskResult) => void;
export type SqsWorkerFailedTaskCallback = (taskName: string, error: any) => void;
export class SqsWorker {
    config: ISqsWorkerConfig;
    constructor(config: ISqsWorkerConfig, successCallback?: SqsWorkerSuccessfulTaskCallback, failCallback?: SqsWorkerFailedTaskCallback);
    registerTasksForProcessingAndStartConsuming(taskTypes: Array<ITaskClass>): void;
}

export abstract class Task {
    static workerConfig: ISqsWorkerConfig;
    abstract run(): Promise<ITaskResult | void>;
    submit(): Promise<import("aws-sdk/lib/request").PromiseResult<SQS.SendMessageResult, import("aws-sdk").AWSError>>;
}

export class SqsWorkerSubmitter {
    constructor(config: ISqsWorkerConfig);
    registerTasksForSubmitting(taskTypes: Array<ITaskClass>): this;
    registerTaskForSubmitting(taskType: ITaskClass): this;
}

export interface ISqsWorkerConfig {
    sqsUrl: string;
    accessKeyId: string;
    secretAccessKey: string;
    region: string;
    verbose?: boolean;
    debug?: boolean;
}

export interface ISqsWorkerTaskResult {
    durationMs: number;
    taskResult: any;
}

export interface ITaskClass {
    name: string;
    workerConfig: ISqsWorkerConfig;
    new (): Task;
}

export interface ITaskResult {
    info?: string;
    error?: any;
}

